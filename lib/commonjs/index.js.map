{"version":3,"names":["_reactNative","require","NativeVoiceStream","NativeModules","EventEmitter","NativeEventEmitter","eventKey","VoiceStream","init","options","start","stop","listen","event","callback","Error","removeAllListeners","addListener","checkMicrophonePermission","Platform","OS","granted","PermissionsAndroid","check","PERMISSIONS","RECORD_AUDIO","error","exports","requestMicrophonePermission","request","RESULTS","GRANTED","_default","default"],"sources":["index.ts"],"sourcesContent":["import {\n  NativeModules,\n  NativeEventEmitter,\n  EmitterSubscription,\n  Platform,\n  PermissionsAndroid,\n  Permission,\n} from \"react-native\";\nimport {\n  VoiceStreamerInterface,\n  VoiceStreamNativeModule,\n  VoiceStreamOptions,\n} from \"./types\";\n\nconst { NativeVoiceStream } = NativeModules as {\n  NativeVoiceStream: VoiceStreamNativeModule;\n};\n\nconst EventEmitter = new NativeEventEmitter(NativeVoiceStream);\nconst eventKey: \"data\" = \"data\";\n\nconst VoiceStream: VoiceStreamerInterface = {\n  /**\n   * Configures the audio recording parameters and prepares the voice streaming session\n   * @param options Configuration for sample rate, buffer size, and other audio settings\n   */\n  init: (options: VoiceStreamOptions): Promise<void> => {\n    return NativeVoiceStream.init(options);\n  },\n\n  /**\n   * Begins capturing audio input and streaming base64-encoded chunks\n   */\n  start: (): Promise<void> => {\n    return NativeVoiceStream.start();\n  },\n\n  /**\n   * Terminates the active recording session and releases audio resources\n   */\n  stop: (): Promise<void> => {\n    return NativeVoiceStream.stop();\n  },\n\n  /**\n   * Registers a callback to receive real-time base64 audio data chunks\n   * @param event Must be 'data'\n   * @param callback Function called with each audio chunk\n   * @returns Subscription that can be removed\n   */\n  listen: (event: \"data\", callback: (data: string) => void): EmitterSubscription => {\n    if (event !== eventKey) {\n      throw new Error(\"Invalid event\");\n    }\n    EventEmitter.removeAllListeners(eventKey);\n    return EventEmitter.addListener(eventKey, callback);\n  },\n};\n\n/**\n * Verifies whether microphone access is currently granted for this app\n * @returns True if permission is granted, false otherwise\n */\nexport const checkMicrophonePermission = async (): Promise<boolean> => {\n  if (Platform.OS === \"ios\") {\n    return NativeVoiceStream.checkMicrophonePermission();\n  } else if (Platform.OS === \"android\") {\n    try {\n      const granted = await PermissionsAndroid.check(\n        PermissionsAndroid.PERMISSIONS.RECORD_AUDIO as Permission\n      );\n      return granted;\n    } catch (error) {\n      return false;\n    }\n  }\n  return false;\n};\n\n/**\n * Prompts the user to grant microphone access if not already authorized (Android only)\n * @returns True if permission granted or already exists, false if denied\n */\nexport const requestMicrophonePermission = async (): Promise<boolean> => {\n  if (Platform.OS === \"ios\") {\n    return NativeVoiceStream.requestMicrophonePermission();\n  } else if (Platform.OS === \"android\") {\n    try {\n      const granted = await PermissionsAndroid.request(\n        PermissionsAndroid.PERMISSIONS.RECORD_AUDIO as Permission\n      );\n      return granted === PermissionsAndroid.RESULTS.GRANTED;\n    } catch (error) {\n      return false;\n    }\n  }\n  return false;\n};\n\nexport default VoiceStream;\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAcA,MAAM;EAAEC;AAAkB,CAAC,GAAGC,0BAE7B;AAED,MAAMC,YAAY,GAAG,IAAIC,+BAAkB,CAACH,iBAAiB,CAAC;AAC9D,MAAMI,QAAgB,GAAG,MAAM;AAE/B,MAAMC,WAAmC,GAAG;EAC1C;AACF;AACA;AACA;EACEC,IAAI,EAAGC,OAA2B,IAAoB;IACpD,OAAOP,iBAAiB,CAACM,IAAI,CAACC,OAAO,CAAC;EACxC,CAAC;EAED;AACF;AACA;EACEC,KAAK,EAAEA,CAAA,KAAqB;IAC1B,OAAOR,iBAAiB,CAACQ,KAAK,CAAC,CAAC;EAClC,CAAC;EAED;AACF;AACA;EACEC,IAAI,EAAEA,CAAA,KAAqB;IACzB,OAAOT,iBAAiB,CAACS,IAAI,CAAC,CAAC;EACjC,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAEA,CAACC,KAAa,EAAEC,QAAgC,KAA0B;IAChF,IAAID,KAAK,KAAKP,QAAQ,EAAE;MACtB,MAAM,IAAIS,KAAK,CAAC,eAAe,CAAC;IAClC;IACAX,YAAY,CAACY,kBAAkB,CAACV,QAAQ,CAAC;IACzC,OAAOF,YAAY,CAACa,WAAW,CAACX,QAAQ,EAAEQ,QAAQ,CAAC;EACrD;AACF,CAAC;;AAED;AACA;AACA;AACA;AACO,MAAMI,yBAAyB,GAAG,MAAAA,CAAA,KAA8B;EACrE,IAAIC,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACzB,OAAOlB,iBAAiB,CAACgB,yBAAyB,CAAC,CAAC;EACtD,CAAC,MAAM,IAAIC,qBAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;IACpC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMC,+BAAkB,CAACC,KAAK,CAC5CD,+BAAkB,CAACE,WAAW,CAACC,YACjC,CAAC;MACD,OAAOJ,OAAO;IAChB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,OAAO,KAAK;IACd;EACF;EACA,OAAO,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AAHAC,OAAA,CAAAT,yBAAA,GAAAA,yBAAA;AAIO,MAAMU,2BAA2B,GAAG,MAAAA,CAAA,KAA8B;EACvE,IAAIT,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACzB,OAAOlB,iBAAiB,CAAC0B,2BAA2B,CAAC,CAAC;EACxD,CAAC,MAAM,IAAIT,qBAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;IACpC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMC,+BAAkB,CAACO,OAAO,CAC9CP,+BAAkB,CAACE,WAAW,CAACC,YACjC,CAAC;MACD,OAAOJ,OAAO,KAAKC,+BAAkB,CAACQ,OAAO,CAACC,OAAO;IACvD,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,OAAO,KAAK;IACd;EACF;EACA,OAAO,KAAK;AACd,CAAC;AAACC,OAAA,CAAAC,2BAAA,GAAAA,2BAAA;AAAA,IAAAI,QAAA,GAAAL,OAAA,CAAAM,OAAA,GAEa1B,WAAW","ignoreList":[]}